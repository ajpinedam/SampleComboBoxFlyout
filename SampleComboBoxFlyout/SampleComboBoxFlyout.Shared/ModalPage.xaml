<Page x:Class="SampleComboBoxFlyout.ModalPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:SampleComboBoxFlyout"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:ios="http://nventive.com/ios"
	  xmlns:not_ios="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:xamarin="http://uno.ui/xamarin"
	  xmlns:toolkit="using:Uno.UI.Toolkit"
	  xmlns:material="using:Uno.Material"
	  mc:Ignorable="d">

	<Page.Resources>
		<DataTemplate x:Key="DefaultComboBoxItemTemplate">
			<Grid>
				<TextBlock Text="{Binding}"
						   Style="{StaticResource Body1}"
						   VerticalAlignment="Center"
						   Margin="16,0,0,0" />
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="RouteComboBoxItemTemplate">
			<Grid>
				<TextBlock Text="{Binding RouteName}"
						   Style="{StaticResource Body1}"
						   VerticalAlignment="Center"
						   Margin="16,0,0,0" />
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="EnumComboBoxItemTemplate">
			<Grid>
				<TextBlock Text="{Binding Converter={StaticResource EnumToString}}"
						   Style="{StaticResource Body1}"
						   VerticalAlignment="Center"
						   Margin="16,0,0,0" />
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="HotkeyColorComboBoxItemTemplate">
			<Grid>
				<Ellipse Fill="{Binding Converter={StaticResource HotkeyColorEnumToBrush}}"
						 Height="20"
						 Width="20"
						 VerticalAlignment="Center"
						 Margin="16,0,0,0" />
			</Grid>
		</DataTemplate>

		<Style x:Key="ComboBoxWithSeparatorStyle"
			   TargetType="ComboBox"
			   BasedOn="{StaticResource DefaultComboBoxStyle}">
			<Setter Property="BorderBrush"
					Value="{StaticResource SeparatorBrush}" />
            <Setter Property="BorderThickness"
					Value="0,0,0,1" />
            <Setter Property="Margin"
					Value="16,0" />
		</Style>

		<Style x:Key="ComboBoxWithSeparatorStyleWithFix"
			   TargetType="ComboBox"
			   BasedOn="{StaticResource DefaultComboBoxStyleWithFix}">
			<Setter Property="BorderBrush"
					Value="{StaticResource SeparatorBrush}" />
			<Setter Property="BorderThickness"
					Value="0,0,0,1" />
			<Setter Property="Margin"
					Value="16,0" />
		</Style>

		<Style x:Key="HotkeyColorComboBoxStyle"
			   TargetType="ComboBox"
			   BasedOn="{StaticResource DefaultComboBoxStyle}">

			<Setter Property="BorderBrush"
					Value="{StaticResource SeparatorBrush}" />
			<Setter Property="BorderThickness"
					Value="0,0,0,1" />
			<Setter Property="Margin"
					Value="16,0" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid x:Name="RootGrid"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedBackground"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="1">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="PlaceholderElement.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused" />
									<VisualState x:Name="FocusedPressed" />
									<VisualState x:Name="Unfocused" />
									<VisualState x:Name="PointerFocused" />
									<VisualState x:Name="FocusedDropDown">
										<VisualState.Setters>
											<Setter Target="PopupBorder.Visibility"
													Value="Visible" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="DropDownStates">

									<VisualState x:Name="Opened">
										<Storyboard>
											<SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
																	 ContentTranslationOffset="0"
																	 ContentTargetName="ScrollViewer"
																	 ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OpenedTargetName="PopupBorder"
																	 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Closed">
										<Storyboard>
											<SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
																	  ContentTranslationOffset="40"
																	  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  ContentTargetName="ScrollViewer"
																	  ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OpenedTargetName="PopupBorder"
																	  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<!-- Pressed Background -->
							<Border x:Name="PressedBackground"
									Background="{ThemeResource ComboBoxPressedHighlightThemeBrush}"
									Opacity="0"
									Grid.ColumnSpan="2" />

							<!-- Title -->
							<TextBlock x:Name="TitleElement"
									   Text="{TemplateBinding Text}"
									   Style="{StaticResource Subtitle1}"
									   Foreground="{StaticResource MaterialOnBackgroundBrush}"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Left"
									   IsHitTestVisible="False"
									   MaxLines="1" />

							<!-- PlaceholderElement (showing placeholder text when no selection is done) -->
							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   Text="{TemplateBinding PlaceholderText}"
									   Style="{StaticResource Body2}"
									   Foreground="{StaticResource MaterialOnBackgroundMediumBrush}"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Right"
									   IsHitTestVisible="False"
									   MaxLines="1"
									   Visibility="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource SelectedIndexToPlaceholderVisibility}}" />

							<!-- ContentPresenter (showing the selected value) -->
							<ContentPresenter x:Name="ContentPresenter"
											  Grid.Column="1"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Right" />

							<!-- Popup -->
							<Popup x:Name="Popup">
								<Border x:Name="PopupBorder"
										CornerRadius="{StaticResource ComboBoxRadius}"
										Background="Transparent"
										HorizontalAlignment="Center"
										Width="1000"
										Padding="4"
										Margin="0,0,0,0">

									<!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer  -->
									<ScrollViewer x:Name="ScrollViewer"
												  BorderBrush="Transparent"
												  BorderThickness="0"
												  CornerRadius="{StaticResource ComboBoxRadius}"
												  AutomationProperties.AccessibilityView="Raw"
												  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
												  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
												  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
												  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
												  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
												  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
												  VerticalSnapPointsType="OptionalSingle"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
												  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
												  VerticalSnapPointsAlignment="Near"
												  HorizontalAlignment="Center"
												  HorizontalContentAlignment="Center"
												  ZoomMode="Disabled">
										<ItemsPresenter HorizontalAlignment="Center" />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Style -->
		<Style x:Key="DefaultComboBoxItemStyle"
			   TargetType="ComboBoxItem">

			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="HorizontalContentAlignment"
					Value="Stretch" />
			<Setter Property="Padding"
					Value="0" />
			<Setter Property="Height"
					Value="48" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBoxItem">
						<Grid x:Name="RootGrid"
							  Background="{TemplateBinding Background}">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />

									<VisualState x:Name="PointerOver">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedOverlay"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="1">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Pressed">
										<!-- Workaround for Issue #246732 where IOS combobox sometimes keeps the pressed-on state too long. -->
										<ios:VisualState.Setters>
											<Setter Target="PressedOverlay.Opacity"
													Value="0.9" />
										</ios:VisualState.Setters>

										<not_ios:Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedOverlay"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="0.9">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</not_ios:Storyboard>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Selected">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialPrimaryBrush}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="SelectedPointerOver">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialPrimaryBrush}" />
										</VisualState.Setters>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedOverlay"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="1">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="SelectedDisabled">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialPrimaryBrush}" />
											<Setter Target="ContentPresenter.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="SelectedPressed">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialPrimaryBrush}" />
										</VisualState.Setters>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedOverlay"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="0.9">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<!-- Pressed Overlay -->
							<Grid x:Name="PressedOverlay"
								  Background="{StaticResource ComboBoxSelectedBackgroundThemeBrush}"
								  BorderBrush="{StaticResource ComboBoxBorderBrush}"
								  BorderThickness="0,1,0,1"
								  IsHitTestVisible="False"
								  VerticalAlignment="Stretch"
								  HorizontalAlignment="Stretch"
								  Opacity="0" />

							<!-- ContentPresenter-->
							<ContentPresenter x:Name="ContentPresenter"
											  Foreground="{StaticResource MaterialOnSurfaceBrush}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="DefaultComboBoxStyle"
			   TargetType="ComboBox">

			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="Foreground"
					Value="{StaticResource MaterialOnBackgroundBrush}" />
			<Setter Property="BorderThickness"
					Value="0" />
			<Setter Property="Padding"
					Value="0" />
			<Setter Property="MinHeight"
					Value="48" />
			<Setter Property="TabNavigation"
					Value="Once" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
					Value="Auto" />
			<Setter Property="ScrollViewer.HorizontalScrollMode"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollMode"
					Value="Auto" />
			<Setter Property="ScrollViewer.IsVerticalRailEnabled"
					Value="True" />
			<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
					Value="False" />
			<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
					Value="True" />
			<Setter Property="HorizontalContentAlignment"
					Value="Stretch" />
			<Setter Property="HorizontalAlignment"
					Value="Stretch" />
			<Setter Property="ItemContainerStyle"
					Value="{StaticResource DefaultComboBoxItemStyle}" />
			<xamarin:Setter Property="uno:ComboBox.DropDownPreferredPlacement"
							Value="Below" />

			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<CarouselPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid x:Name="RootGrid"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedBackground"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="1">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="PlaceholderElement.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused" />
									<VisualState x:Name="FocusedPressed" />
									<VisualState x:Name="Unfocused" />
									<VisualState x:Name="PointerFocused" />
									<VisualState x:Name="FocusedDropDown">
										<VisualState.Setters>
											<Setter Target="PopupBorder.Visibility"
													Value="Visible" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="DropDownStates">

									<VisualState x:Name="Opened">
										<Storyboard>
											<SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
																	 ContentTranslationOffset="0"
																	 ContentTargetName="ScrollViewer"
																	 ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OpenedTargetName="PopupBorder"
																	 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Closed">
										<Storyboard>
											<SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
																	  ContentTranslationOffset="40"
																	  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  ContentTargetName="ScrollViewer"
																	  ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OpenedTargetName="PopupBorder"
																	  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<!-- Pressed Background -->
							<Border x:Name="PressedBackground"
									Background="{ThemeResource ComboBoxPressedHighlightThemeBrush}"
									Opacity="0"
									Grid.ColumnSpan="2" />

							<!-- Title -->
							<TextBlock x:Name="TitleElement"
									   Text="{TemplateBinding Text}"
									   Style="{StaticResource Subtitle1}"
									   Foreground="{StaticResource MaterialOnBackgroundBrush}"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Left"
									   IsHitTestVisible="False"
									   MaxLines="1" />

							<!-- PlaceholderElement (showing placeholder text when no selection is done) -->
							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   Text="{TemplateBinding PlaceholderText}"
									   Style="{StaticResource Body2}"
									   Foreground="{StaticResource MaterialOnBackgroundMediumBrush}"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Right"
									   IsHitTestVisible="False"
									   MaxLines="1"
									   Visibility="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource SelectedIndexToPlaceholderVisibility}}" />

							<!-- ContentPresenter (showing the selected value) -->
							<ContentPresenter x:Name="ContentPresenter"
											  Grid.Column="1"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Right" />

							<!-- Popup -->
							<Popup x:Name="Popup">
								<Border x:Name="PopupBorder"
										CornerRadius="{StaticResource ComboBoxRadius}"
										Background="{StaticResource MaterialSurfaceBrush}">
									<!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer  -->
									<ScrollViewer x:Name="ScrollViewer"
												  BorderBrush="Transparent"
												  BorderThickness="0"
												  CornerRadius="{StaticResource ComboBoxRadius}"
												  AutomationProperties.AccessibilityView="Raw"
												  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
												  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
												  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
												  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
												  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
												  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
												  VerticalSnapPointsType="OptionalSingle"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
												  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
												  VerticalSnapPointsAlignment="Near"
												  ZoomMode="Disabled">
										<ItemsPresenter />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="DefaultComboBoxStyleWithFix"
			   TargetType="ComboBox">

			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="Foreground"
					Value="{StaticResource MaterialOnBackgroundBrush}" />
			<Setter Property="BorderThickness"
					Value="0" />
			<Setter Property="Padding"
					Value="0" />
			<Setter Property="MinHeight"
					Value="48" />
			<Setter Property="TabNavigation"
					Value="Once" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
					Value="Auto" />
			<Setter Property="ScrollViewer.HorizontalScrollMode"
					Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollMode"
					Value="Auto" />
			<Setter Property="ScrollViewer.IsVerticalRailEnabled"
					Value="True" />
			<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
					Value="False" />
			<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
					Value="True" />
			<Setter Property="HorizontalContentAlignment"
					Value="Stretch" />
			<Setter Property="HorizontalAlignment"
					Value="Stretch" />
			<Setter Property="ItemContainerStyle"
					Value="{StaticResource DefaultComboBoxItemStyle}" />
			<xamarin:Setter Property="uno:ComboBox.DropDownPreferredPlacement"
							Value="Below" />

			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<CarouselPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid x:Name="RootGrid"
							  BorderBrush="{TemplateBinding BorderBrush}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedBackground"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="1">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="PlaceholderElement.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused" />
									<VisualState x:Name="FocusedPressed" />
									<VisualState x:Name="Unfocused" />
									<VisualState x:Name="PointerFocused" />
									<VisualState x:Name="FocusedDropDown">
										<VisualState.Setters>
											<Setter Target="PopupBorder.Visibility"
													Value="Visible" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="DropDownStates">

									<VisualState x:Name="Opened">
										<Storyboard>
											<SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
																	 ContentTranslationOffset="0"
																	 ContentTargetName="ScrollViewer"
																	 ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OpenedTargetName="PopupBorder"
																	 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Closed">
										<Storyboard>
											<SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
																	  ContentTranslationOffset="40"
																	  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  ContentTargetName="ScrollViewer"
																	  ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OpenedTargetName="PopupBorder"
																	  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<!-- Pressed Background -->
							<Border x:Name="PressedBackground"
									Background="{ThemeResource ComboBoxPressedHighlightThemeBrush}"
									Opacity="0"
									Grid.ColumnSpan="2" />

							<!-- Title -->
							<TextBlock x:Name="TitleElement"
									   Text="{TemplateBinding Text}"
									   Style="{StaticResource Subtitle1}"
									   Foreground="{StaticResource MaterialOnBackgroundBrush}"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Left"
									   IsHitTestVisible="False"
									   MaxLines="1" />

							<!-- PlaceholderElement (showing placeholder text when no selection is done) -->
							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   Text="{TemplateBinding PlaceholderText}"
									   Style="{StaticResource Body2}"
									   Foreground="{StaticResource MaterialOnBackgroundMediumBrush}"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Right"
									   IsHitTestVisible="False"
									   MaxLines="1"
									   Visibility="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource SelectedIndexToPlaceholderVisibility}}" />

							<!-- ContentPresenter (showing the selected value) -->
							<ContentPresenter x:Name="ContentPresenter"
											  Grid.Column="1"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Right" />

							<!-- Popup -->
							<Popup x:Name="Popup">
								<Border x:Name="PopupBorder"
										Width="1000"
										Margin="12,0"
										Padding="4"
										CornerRadius="{StaticResource ComboBoxRadius}"
										Background="{StaticResource MaterialSurfaceBrush}">
									<!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer  -->
									<ScrollViewer x:Name="ScrollViewer"
												  BorderBrush="Transparent"
												  BorderThickness="0"
												  CornerRadius="{StaticResource ComboBoxRadius}"
												  AutomationProperties.AccessibilityView="Raw"
												  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
												  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
												  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
												  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
												  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
												  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
												  VerticalSnapPointsType="OptionalSingle"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
												  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
												  VerticalSnapPointsAlignment="Near"
												  ZoomMode="Disabled">
										<ItemsPresenter />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Template copied from MaterialComboBoxStyle : https://github.com/unoplatform/Uno.Themes/src/library/Uno.Material/Styles/Controls/ComboBox.xaml -->
		<!-- This template is copied because the current MaterialComboBoxStyle does not allow its ElevatedView to use the template's border brush -->
		<!-- Combo box style with an outline -->
		<Style x:Key="OutlinedComboBoxStyle"
			   TargetType="ComboBox"
			   BasedOn="{StaticResource MaterialComboBoxStyle}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid x:Name="RootGrid"
							  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="RootGrid.Background"
													Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}" />
											<Setter Target="Highlight.Background"
													Value="{ThemeResource ComboBoxSelectedPointerOverBackgroundThemeBrush}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="PressedBackground"
															 Storyboard.TargetProperty="Opacity"
															 Duration="{StaticResource MaterialAnimationDuration}"
															 To="1">
												<DoubleAnimation.EasingFunction>
													<CubicEase EasingMode="EaseIn" />
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>

										<VisualState.Setters>
											<Setter Target="RootGrid.Background"
													Value="{ThemeResource ComboBoxPressedBackgroundThemeBrush}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="DropDownGlyph_Down.Fill"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
											<Setter Target="PlaceholderElement.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
											<Setter Target="ContentPresenter.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
											<Setter Target="IconPresenter.Foreground"
													Value="{StaticResource MaterialOnSurfaceLowBrush}" />
											<Setter Target="ComboBoxContent.Background"
													Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
											<Setter Target="ElevatedView.BorderThickness"
													Value="0" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<VisualState.Setters>
											<Setter Target="HighlightBorder.Opacity"
													Value="1" />
											<Setter Target="PlaceholderElement.Foreground"
													Value="{StaticResource TextBoxLabelFocusColorBrush}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="FocusedPressed">
										<VisualState.Setters>
											<Setter Target="Highlight.Background"
													Value="{ThemeResource ComboBoxPressedHighlightThemeBrush}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Unfocused">
										<VisualState.Setters>
											<Setter Target="PlaceholderElement.Foreground"
													Value="{StaticResource ComboBoxPlaceholderForegroundThemeBrush}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="PointerFocused" />

									<VisualState x:Name="FocusedDropDown">
										<VisualState.Setters>
											<Setter Target="PopupBorder.Visibility"
													Value="Visible" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<!-- Elevated View -->
							<toolkit:ElevatedView x:Name="ElevatedView"
												  Background="{TemplateBinding Background}"
												  HorizontalAlignment="Stretch"
												  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
												  Elevation="8"
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}">

								<Grid x:Name="ComboBoxContent"
									  Background="{TemplateBinding Background}"
									  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="40" />
									</Grid.ColumnDefinitions>

									<!-- Pressed Background -->
									<Border x:Name="PressedBackground"
											CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
											Background="{ThemeResource ComboBoxPressedHighlightThemeBrush}"
											Opacity="0"
											Grid.ColumnSpan="2" />

									<!-- Highlight Background -->
									<Border x:Name="HighlightBorder"
											BorderBrush="{StaticResource ComboBoxFocusedBorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											Opacity="0"
											CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
											Grid.ColumnSpan="2" />

									<!-- Highlight -->
									<Border x:Name="Highlight"
											CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
											Background="{ThemeResource ComboBoxSelectedBackgroundThemeBrush}"
											Margin="{TemplateBinding BorderThickness}"
											Opacity="0" />

									<Grid Margin="16,0"
										  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}">
										<Grid.Resources>
											<!-- Resources added here in order to manage the ContentPresenter TranslateY depending if there is a PlaceholderText or not -->
											<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithPlaceholder"
																TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToContentTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />

											<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithoutPlaceholder"
																TranslateY="0" />

											<material:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformConverter"
																					  NotNullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithPlaceholder}"
																					  NullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}" />
										</Grid.Resources>

										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<!-- IconPresenter -->
										<ContentPresenter x:Name="IconPresenter"
														  Content="{Binding Path=(material:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
														  MaxHeight="34"
														  MaxWidth="34"
														  MinWidth="25"
														  Margin="0,0,8,0"
														  HorizontalAlignment="Center"
														  VerticalAlignment="Center"
														  Visibility="{Binding Path=(material:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

										<!-- ContentPresenter -->
										<ContentPresenter x:Name="ContentPresenter"
														  Grid.Column="1"
														  VerticalAlignment="Center"
														  RenderTransform="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformConverter}, TargetNullValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}, FallbackValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}}">
										</ContentPresenter>

										<!-- PlaceholderElement -->
										<TextBlock x:Name="PlaceholderElement"
												   Grid.Column="1"
												   Text="{TemplateBinding PlaceholderText}"
												   Style="{StaticResource Body2}"
												   FontSize="16"
												   LineHeight="24"
												   Foreground="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToPlaceholderThemeBrushConverter}, TargetNullValue={StaticResource ComboBoxPlaceholderForegroundThemeBrush}, FallbackValue={StaticResource ComboBoxPlaceholderForegroundThemeBrush}}"
												   VerticalAlignment="Center"
												   RenderTransformOrigin="0,0.5"
												   IsHitTestVisible="False"
												   MaxLines="1">
											<TextBlock.RenderTransform>
												<CompositeTransform x:Name="PlaceholderElement_CompositeTransform"
																	ScaleX="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToScaleConverter}, TargetNullValue=1, FallbackValue=1}"
																	ScaleY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToScaleConverter}, TargetNullValue=1, FallbackValue=1}"
																	TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToPlaceholderTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />
											</TextBlock.RenderTransform>
										</TextBlock>
									</Grid>

									<!-- Down -->
									<Path x:Name="DropDownGlyph_Down"
										  Data="{StaticResource DownArrowPathData}"
										  Fill="{ThemeResource ComboBoxArrowForegroundThemeBrush}"
										  Stretch="Uniform"
										  Height="5"
										  Width="10"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Grid.Column="1" />

									<!-- Up -->
									<Path x:Name="DropDownGlyph_Up"
										  Data="{StaticResource UpArrowPathData}"
										  Fill="{ThemeResource ComboBoxArrowForegroundThemeBrush}"
										  Stretch="Uniform"
										  Height="5"
										  Width="10"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Visibility="Collapsed"
										  Grid.Column="1" />

									<!-- Popup -->
									<Popup x:Name="Popup">
										<Border x:Name="PopupBorder">
											<!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer  -->
											<ScrollViewer x:Name="ScrollViewer"
														  Background="{TemplateBinding Background}"
														  BorderBrush="{StaticResource ComboBoxBorderBrush}"
														  BorderThickness="{TemplateBinding BorderThickness}"
														  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
														  AutomationProperties.AccessibilityView="Raw"
														  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
														  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
														  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
														  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
														  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
														  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
														  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
														  VerticalSnapPointsType="OptionalSingle"
														  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
														  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
														  VerticalSnapPointsAlignment="Near"
														  ZoomMode="Disabled">
												<ItemsPresenter />
											</ScrollViewer>
										</Border>
									</Popup>
								</Grid>
							</toolkit:ElevatedView>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="ComboBoxItem"
			   BasedOn="{StaticResource DefaultComboBoxItemStyle}" />

		<Style TargetType="ComboBox"
			   BasedOn="{StaticResource DefaultComboBoxStyle}" />
	</Page.Resources>

	<Grid Background="Gray">
		<Grid.RowDefinitions>
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
		</Grid.RowDefinitions>

		<ComboBox Grid.Row="0"
				  Text="Bugged alignement"
				  VerticalAlignment="Center"
				  PlaceholderText="bugged"
				  ItemsSource="123456"
				  Style="{StaticResource ComboBoxWithSeparatorStyle}" />

		<ComboBox Grid.Row="1"
				  Text="fixed alignement"
				  VerticalAlignment="Center"
				  PlaceholderText="fixed"
				  ItemsSource="123"
				  Style="{StaticResource ComboBoxWithSeparatorStyleWithFix}" />

        <ComboBox Grid.Row="2"
				  Text="Something"
				  VerticalAlignment="Center"
				  PlaceholderText="something"
				  ItemsSource="6541" />

        <ComboBox Grid.Row="3"
				  Text="Bugged alignement"
				  VerticalAlignment="Center"
				  PlaceholderText="bugged"
				  ItemsSource="123456"
				  Style="{StaticResource ComboBoxWithSeparatorStyle}" />
    </Grid>
</Page>
